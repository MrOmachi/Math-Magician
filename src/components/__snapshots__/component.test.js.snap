// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing the App UI Calculator UI component 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div>
        <div
          class="navigation"
        >
          <header
            style="display: flex; justify-content: space-between; width: 90%; margin: auto;"
          >
            <h1>
              Math Magician
            </h1>
            <ul
              style="display: flex; gap: 20px; list-style: none;"
            >
              <li>
                <a
                  href="/"
                >
                  Home
                </a>
              </li>
              <li>
                <a
                  href="/Calculator"
                >
                  Calculator
                </a>
              </li>
              <li>
                <a
                  href="/Quotes"
                >
                  Quotes
                </a>
              </li>
            </ul>
          </header>
        </div>
        <div
          class="calc"
        >
          <div
            class="displayScreen"
          />
          <div
            class="calcBlock"
          >
            <div
              class="col1"
            >
              <button
                class="btnAc"
                type="button"
                value="AC"
              >
                AC
              </button>
              <button
                class="btnAc"
                type="button"
                value="+/-"
              >
                +/-
              </button>
              <button
                class="btnAc"
                type="button"
                value="%"
              >
                %
              </button>
              <button
                class="btnAc operator"
                type="button"
                value="รท"
              >
                /
              </button>
            </div>
            <div
              class="col1"
            >
              <button
                class="btnAc"
                type="button"
                value="7"
              >
                7
              </button>
              <button
                class="btnAc"
                type="button"
                value="8"
              >
                8
              </button>
              <button
                class="btnAc"
                type="button"
                value="9"
              >
                9
              </button>
              <button
                class="btnAc operator"
                type="button"
                value="x"
              >
                x
              </button>
            </div>
            <div
              class="col1"
            >
              <button
                class="btnAc"
                type="button"
                value="4"
              >
                4
              </button>
              <button
                class="btnAc"
                type="button"
                value="5"
              >
                5
              </button>
              <button
                class="btnAc"
                type="button"
                value="6"
              >
                6
              </button>
              <button
                class="btnAc operator"
                type="button"
                value="-"
              >
                -
              </button>
            </div>
            <div
              class="col1"
            >
              <button
                class="btnAc"
                type="button"
                value="1"
              >
                1
              </button>
              <button
                class="btnAc"
                type="button"
                value="2"
              >
                2
              </button>
              <button
                class="btnAc"
                type="button"
                value="3"
              >
                3
              </button>
              <button
                class="btnAc operator"
                type="button"
                value="+"
              >
                +
              </button>
            </div>
            <div
              class="col1"
            >
              <button
                class="btnAc btn0"
                type="button"
                value="0"
              >
                0
              </button>
              <button
                class="btnAc"
                type="button"
                value="."
              >
                .
              </button>
              <button
                class="btnAc operator"
                type="button"
                value="="
              >
                =
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div
        class="navigation"
      >
        <header
          style="display: flex; justify-content: space-between; width: 90%; margin: auto;"
        >
          <h1>
            Math Magician
          </h1>
          <ul
            style="display: flex; gap: 20px; list-style: none;"
          >
            <li>
              <a
                href="/"
              >
                Home
              </a>
            </li>
            <li>
              <a
                href="/Calculator"
              >
                Calculator
              </a>
            </li>
            <li>
              <a
                href="/Quotes"
              >
                Quotes
              </a>
            </li>
          </ul>
        </header>
      </div>
      <div
        class="calc"
      >
        <div
          class="displayScreen"
        />
        <div
          class="calcBlock"
        >
          <div
            class="col1"
          >
            <button
              class="btnAc"
              type="button"
              value="AC"
            >
              AC
            </button>
            <button
              class="btnAc"
              type="button"
              value="+/-"
            >
              +/-
            </button>
            <button
              class="btnAc"
              type="button"
              value="%"
            >
              %
            </button>
            <button
              class="btnAc operator"
              type="button"
              value="รท"
            >
              /
            </button>
          </div>
          <div
            class="col1"
          >
            <button
              class="btnAc"
              type="button"
              value="7"
            >
              7
            </button>
            <button
              class="btnAc"
              type="button"
              value="8"
            >
              8
            </button>
            <button
              class="btnAc"
              type="button"
              value="9"
            >
              9
            </button>
            <button
              class="btnAc operator"
              type="button"
              value="x"
            >
              x
            </button>
          </div>
          <div
            class="col1"
          >
            <button
              class="btnAc"
              type="button"
              value="4"
            >
              4
            </button>
            <button
              class="btnAc"
              type="button"
              value="5"
            >
              5
            </button>
            <button
              class="btnAc"
              type="button"
              value="6"
            >
              6
            </button>
            <button
              class="btnAc operator"
              type="button"
              value="-"
            >
              -
            </button>
          </div>
          <div
            class="col1"
          >
            <button
              class="btnAc"
              type="button"
              value="1"
            >
              1
            </button>
            <button
              class="btnAc"
              type="button"
              value="2"
            >
              2
            </button>
            <button
              class="btnAc"
              type="button"
              value="3"
            >
              3
            </button>
            <button
              class="btnAc operator"
              type="button"
              value="+"
            >
              +
            </button>
          </div>
          <div
            class="col1"
          >
            <button
              class="btnAc btn0"
              type="button"
              value="0"
            >
              0
            </button>
            <button
              class="btnAc"
              type="button"
              value="."
            >
              .
            </button>
            <button
              class="btnAc operator"
              type="button"
              value="="
            >
              =
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Testing the App UI Quote UI component 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div>
        <div
          class="navigation"
        >
          <header
            style="display: flex; justify-content: space-between; width: 90%; margin: auto;"
          >
            <h1>
              Math Magician
            </h1>
            <ul
              style="display: flex; gap: 20px; list-style: none;"
            >
              <li>
                <a
                  href="/"
                >
                  Home
                </a>
              </li>
              <li>
                <a
                  href="/Calculator"
                >
                  Calculator
                </a>
              </li>
              <li>
                <a
                  href="/Quotes"
                >
                  Quotes
                </a>
              </li>
            </ul>
          </header>
        </div>
        <p>
          Mathematics is not about numbers, equations, computations or algorithms, it is about understanding - William Paul Thurston
        </p>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div
        class="navigation"
      >
        <header
          style="display: flex; justify-content: space-between; width: 90%; margin: auto;"
        >
          <h1>
            Math Magician
          </h1>
          <ul
            style="display: flex; gap: 20px; list-style: none;"
          >
            <li>
              <a
                href="/"
              >
                Home
              </a>
            </li>
            <li>
              <a
                href="/Calculator"
              >
                Calculator
              </a>
            </li>
            <li>
              <a
                href="/Quotes"
              >
                Quotes
              </a>
            </li>
          </ul>
        </header>
      </div>
      <p>
        Mathematics is not about numbers, equations, computations or algorithms, it is about understanding - William Paul Thurston
      </p>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Testing the App UI Testing home UI component 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div>
        <div
          class="navigation"
        >
          <header
            style="display: flex; justify-content: space-between; width: 90%; margin: auto;"
          >
            <h1>
              Math Magician
            </h1>
            <ul
              style="display: flex; gap: 20px; list-style: none;"
            >
              <li>
                <a
                  href="/"
                >
                  Home
                </a>
              </li>
              <li>
                <a
                  href="/Calculator"
                >
                  Calculator
                </a>
              </li>
              <li>
                <a
                  href="/Quotes"
                >
                  Quotes
                </a>
              </li>
            </ul>
          </header>
        </div>
        <h2>
          Welcome to my page
        </h2>
        <p>
          Lorem ipsum dolor sit amet consectetur adipisicing elit. Dolor ut recusandae maiores dignissimos, accusamus laboriosam velit voluptatum. Necessitatibus molestiae iure aut excepturi eos numquam, perspiciatis laudantium. Porro excepturi doloribus quas odio cupiditate esse, ducimus itaque. Odio quam doloribus ea quos dicta modi omnis dolorem culpa, provident nisi iste beatae adipisci?
        </p>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div
        class="navigation"
      >
        <header
          style="display: flex; justify-content: space-between; width: 90%; margin: auto;"
        >
          <h1>
            Math Magician
          </h1>
          <ul
            style="display: flex; gap: 20px; list-style: none;"
          >
            <li>
              <a
                href="/"
              >
                Home
              </a>
            </li>
            <li>
              <a
                href="/Calculator"
              >
                Calculator
              </a>
            </li>
            <li>
              <a
                href="/Quotes"
              >
                Quotes
              </a>
            </li>
          </ul>
        </header>
      </div>
      <h2>
        Welcome to my page
      </h2>
      <p>
        Lorem ipsum dolor sit amet consectetur adipisicing elit. Dolor ut recusandae maiores dignissimos, accusamus laboriosam velit voluptatum. Necessitatibus molestiae iure aut excepturi eos numquam, perspiciatis laudantium. Porro excepturi doloribus quas odio cupiditate esse, ducimus itaque. Odio quam doloribus ea quos dicta modi omnis dolorem culpa, provident nisi iste beatae adipisci?
      </p>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
